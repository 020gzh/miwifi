
        Xiaomi Router kernel


1. Overview
============

Support R1D router (with 1T sata disk). Mini will be supported in the furture.

The Kernel version is 2.6.36
WLAN driver are binary object file from Broadcom located in 'drivers/net/wl'


2. Change History
==================

  - 2014/06: First version with kernel 2.6.36, support router R1D


3. Features
===========

3.1 Supported Features
-----------------------

  o General Platform
    + ARM Cortex A9 Dual-Core
    + 32 KB I-cache and 32 KB D-cache per core
    + 256 KB L2 Cache (shared)
    + 128-entry TLB
    + SMP

  o Bus
    + DDR3: Broadcom BCM4709 On-Chip DDR3 interface
    + PCI-E: Broadcom BCM4709 On-Chip PCI-E Controller 
    + USB: Broadcom BCM4709 On-Chip USB Controller
    + SPI: Broadcom BCM4709 On-Chip SPI Controller
    + SATA: ASMedia ASM1062 PCI-E SATA Controller

  o Network
    + Ethernet: Broadcom On-Chip 010/100/1000M  Ethernet Controller 
    + WLAN:
        + 2.4GHz: BCM43217, 802.11b/g/n Transceiver, PCIe 2.0 interface,
                   Radio + Baseband + MAC, 300Mbps
        + 5.0GHz: BCM4352, 2-Stream 802.11ac Transceiver (Support 802.11a/b/g/n)
                   PCIe 2.0 interface, Radio + Baseband + MAC, 867Mbps

  o Storage
    + NOR Flash: MXIC 25L12835F (16MB)
    + SATA Disk: Samsung 1T Sata disk 


3.2 Unsupported Features
------------------------

Will be support in the furture:

  o MISC
    + TEMP Sensor
    + GPIO LED


4. Usage
==========

4.1 Build
----------

The following is validated in Ubuntu 12.04:

  $ sudo apt-get install lzma
  $ git clone git://github.com/comcat/miwifi.git
  $ export PATH=`pwd`/miwifi/toolchain/hndtools-arm-linux-2.6.36-uclibc-4.5.3/bin:$PATH
  $ cd miwifi/kernel/linux-2.6.36
  $ make ARCH=arm CROSS_COMPILE=arm-brcm-linux-uclibcgnueabi- vmlinuz -j4

The output image is arch/arm/boot/vmlinuz and the build system automatly
install the vmlinuz into /tftpboot/ , you can load it from CFE via tftpboot


4.2 Enviroment
---------------

4.2.1 Network
--------------

Make sure the LAN port (black one) of the Router and your PC ethernet port are
connected to the same Ethernet HUB.

The default ip addr of the CFE is 192.168.1.1. So we need to setup a new ip
for our PC something like:

  $ sudo ifconfig eth0:1 192.168.1.2


4.2.2 TFTP Server
------------------

We load the kernel through tftpboot. So we need to install a tftp server in your
desktop PC:

  $ sudo apt-get install tftpd tftp

Configure the tftp server via touching a file /etc/xinetd.d/tftp with following
contents:

$ cat /etc/xinetd.d/tftp
service tftp
{
    socket_type = dgram
    protocol = udp
    wait = yes
    user = root
    server = /usr/sbin/in.tftpd
    server_args = -s /tftpboot
    disable = no
    per_source = 11
    cps = 100 2
    flags = IPv4
}

$ ls /etc/xinetd.d/
chargen  daytime  discard  echo  tftp  time

$ sudo mkdir /tftpboot
$ sudo chmod 777 /tftpboot

$ sudo /etc/init.d/xinetd restart


4.2.3 CFE tftp load
--------------------

You can set the nvram parameter 'flag_tftp_bootup' to 'on' to enable the CFE
tftpboot:

root@XiaoQiang:/# nvram get flag_tftp_bootup
off
root@XiaoQiang:/# nvram set flag_tftp_bootup=on
root@XiaoQiang:/# nvram commit
root@XiaoQiang:/# nvram get flag_tftp_bootup
on
root@XiaoQiang:/# reboot
 
...........
CFE version v1.0.4
BSP: 6.37.14.34 (r415984) based on BBP 1.0.37 for BCM947XX (32bit,SP,)
Build Date: Wed Apr 30 18:03:21 CST 2014 (szy@shenzhiyong-ct)
 
...........
 
Device eth0:  hwaddr 8C-BE-BE-20-B7-48, ipaddr 192.168.1.1, mask 255.255.255.0
        gateway not set, nameserver not set
********** flag_tftp_bootup=on **********
tftp network: ifconfig eth0 -addr=192.168.1.1 -mask=255.255.255.0 -gw=192.168.1.1
Device eth0:  hwaddr 8C-BE-BE-20-B7-48, ipaddr 192.168.1.1, mask 255.255.255.0
        gateway 192.168.1.1, nameserver not set
kernel: boot -raw -z -addr=0x8000 -max=0x800000 192.168.1.2:vmlinuz
Loader:raw Filesys:tftp Dev:eth0 File:192.168.1.2:vmlinuz Options:(null)
Loading: ........ 5704544 bytes read
Entry at 0x00008000
Closing network.
Starting program at 0x00008000
......
......
