#!/bin/sh
#
# Copyright (C) 2006-2014 OpenWrt.org
# Copyright (C) 2014 JacksLab.org
#
#

klogger(){
	local msg="$@"
	test -z "$msg" && return 1

	echo "$msg" >> /dev/kmsg 2>/dev/null
}

reboot() {
	nvram set flag_reboot_system=1
	exec /sbin/init
}

upnet() {
	#not vlan support in bootloader and ramfs, using trunk mode
	#set to "0 1 2 5u" for ramfs network only, do not commit
	rmmod et 2>/dev/null
	nvram set vlan1ports="0 2 5u"
	nvram set vlan2ports="4 5"

	mac=`nvram get et0macaddr`
	if [ "$mac" = "00:90:4C:0F:F2:a7" ]; then
		uuid=`cat /proc/sys/kernel/random/uuid`
		b1=`echo $uuid | cut -b 1-2`
		b2=`echo $uuid | cut -b 3-4`
		b3=`echo $uuid | cut -b 5-6`
		mac=`echo 00:90:4C:$b1:$b2:$b3`
		nvram set "pci/1/1/macaddr=$mac"

		uuid=`cat /proc/sys/kernel/random/uuid`
		b1=`echo $uuid | cut -b 1-2`
		b2=`echo $uuid | cut -b 3-4`
		b3=`echo $uuid | cut -b 5-6`
		mac=`echo 00:90:4C:$b1:$b2:$b3`
		nvram set "pci/2/1/macaddr=$mac"

		uuid=`cat /proc/sys/kernel/random/uuid`
		b1=`echo $uuid | cut -b 1-2`
		b2=`echo $uuid | cut -b 3-4`
		b3=`echo $uuid | cut -b 5-6`
		mac=`echo 00:90:4C:$b1:$b2:$b3`
		nvram set "et0macaddr=$mac"
	fi
	insmod /lib/modules/et.ko

	lip=$1
	if [ "$lip" = "auto" ]; then
		/sbin/udhcpc -t 10 -n
		if [ $? -eq 1 ]; then
			lip="192.168.31.1"

			ifconfig eth0 $lip up
		fi
	else
		[ -n "$lip" ] || lip="192.168.1.1"
		ifconfig eth0 $lip up
	fi
	echo 1 > /proc/sys/net/ipv6/conf/eth0/forwarding

	ifconfig lo up
	nvram set vlan1ports="0 2 5*"
	nvram set vlan2ports="4 5"
}

upmount() {
	mount -n -o move /tmp /mnt/tmp
	mount -n -o move /sys /mnt/sys
	mount -n -o move /proc /mnt/proc
	mount -n -o move /dev /mnt/dev
}

check_nvram() {

	restore=`nvram get restore_defaults`
	boardflags2=`nvram get pci/1/1/boardflags2`
	boardflags3=`nvram get telnet_en`
	if [ -z "$boardflags2" ] || [ -z "$boardflags3" ]; then
		nvram_corrupt=1
	fi

	#restore: 1, 恢复出厂设置；2，ota升级 	#nvram_corrupt: 1, nvram被破坏
	if [ -s /usr/share/xiaoqiang/xiaoqiang-defaults.txt ]; then
		if [ "$restore" = "1" ] || [ "$restore" = "2" ] || [ "$nvram_corrupt" = "1" ]; then
			cat /usr/share/xiaoqiang/xiaoqiang-defaults.txt | while read line
			do
				nvram set "$line"
			done

			#bdata sync
			nvram commit
		fi
	fi
}

[ -d /dev ] || mkdir -m 0755 /dev
[ -d /mnt ] || mkdir -m 0700 /mnt
[ -d /sys ] || mkdir /sys
[ -d /proc ] || mkdir /proc
[ -d /tmp ] || mkdir /tmp

mkdir -p /var/lock
mount -t sysfs -o nodev,noexec,nosuid none /sys 
mount -t proc -o nodev,noexec,nosuid none /proc 

klogger "Loading, please wait..."

# Note that this only becomes /dev on the real filesystem if udev's scripts
# are used; which they will be, but it's worth pointing out
if ! mount -t devtmpfs -o mode=0755 none /dev; then
	mount -t tmpfs -o mode=0755 none /dev
	mknod -m 0600 /dev/console c 5 1
	mknod /dev/null c 1 3
fi
mount -t tmpfs -o "nosuid,size=20%,mode=0755" tmpfs /tmp

# Checking the nvram
check_nvram

klogger "Loading essential drivers..."
for i in `cat /lib/modules/mod.lst`;
do
	if [ "$i" != "et.ko" ] ; then
		insmod /lib/modules/$i
	fi
done

model=`nvram get model`
if [ -z "$model" ]; then
	model=`cat /proc/xiaoqiang/model`
fi

if [ "$model" = "R1AC" ]; then
	insmod /lib/modules/usb-storage.ko 2>/dev/null
	sleep 3
fi

klogger "Press Ctrl+C to enter RAMFS..."
rd -w 1 && nvram set flag_package_update=7

update=`nvram get flag_package_update`
if [ "$update" == "7" ]; then

	klogger "Welcome to RAMFS of Jarvis"

	exec /sbin/init
else
	klogger "Bringup the system..."
	
	# flash the blue led
	gpio 3 1
	gpio 3 0
	gpio 3 1
	gpio 3 0
	gpio 3 1
	gpio 3 0
	gpio 3 1
	gpio 3 0

	rootfs=`nvram get rootfs`
	if [ "$rootfs" == "nfs" ]; then
		upnet
		/usr/bin/mount -onolock -t nfs 192.168.1.2:/tftpboot/rootfs /mnt

		# flag_boot_type: 1 system in SATA   version
		#                 2 system in SQUASH version
		#                 9 system in tftp version
		nvram set flag_boot_type=1
		if [ -x /mnt/lib/preinit.sh ]; then
			# boot_status: 1 sata mode
			#              2 flash mode
			upmount
			exec switch_root /mnt /lib/preinit.sh
		else
			upmount
			exec switch_root /mnt /bin/sh
		fi
	else
		mntdev=/dev/sda4
		[ -b $mntdev ] && mount -t ext4 $mntdev /mnt

		# flag_boot_type: 1 system in SATA   version
		#                 2 system in SQUASH version
		#                 9 system in tftp version
		nvram set flag_boot_type=1
		if [ -x /mnt/lib/preinit.sh ]; then
			# boot_status: 1 sata mode
			#              2 flash mode
			upmount
			exec switch_root /mnt /lib/preinit.sh
		else
			upmount
			exec switch_root /mnt /bin/sh
		fi
	
	fi

	reboot
fi
